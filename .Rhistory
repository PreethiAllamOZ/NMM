runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
require(tidyverse)
require(caret)
require(shinyalert)
require(shinyWidgets)
require(shinyjs)
require(ranger)
require(tools)
library(shiny)
library(magrittr)
library(xgboost)
library(raster)
library(nabor)
library(shinycssloaders)
library(DT)
library(plotly)
library(ggforce)
options(shiny.maxRequestSize=10000*1024^2)
West_musgraves_xgb_Model <- xgb.load(modelfile = 'Models/West_Musgraves_Near_Miss_Model.xgb')
West_musgraves_RDS_Model<-readRDS("Models/West_Musgraves_Near_Miss.RDS")
Carra_Model<-readRDS("Models/Carra_Near_Miss.RDS")
Carra_Model_No_V<-readRDS("Models/Carra_Near_Miss_No_Vanadium.RDS")
Starra_Model_xgb_Model<-xgb.load(modelfile='Models/Starra_Near_Miss_Model.xgb')
Starra_RDS_Model<-readRDS('Models/Starra_Near_Miss.RDS')
Model<-function(datasource)
{
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
if (all(c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
#change column names
data <-data %>% rename(Cr_ppm=CrPPM,Zr_ppm=ZrPPM,Zn_ppm=ZnPPM,Co_ppm=CoPPM,V_ppm=VPPM,S_pc=SPPM,Mg_pc=MgPPM ,K_pc= KPPM,Ti_pc=TiPPM, Fe_pc=FePPM, P_pc=PPPM)
# #change PPM to PC
data$S_pc=data$S_pc/10000
data$Mg_pc=data$Mg_pc/10000
data$K_pc=data$K_pc/10000
data$Ti_pc=data$Ti_pc/10000
data$Fe_pc=data$Fe_pc/10000
data$P_pc=data$P_pc/10000
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,S_pc,Mg_pc,K_pc,Ti_pc,Fe_pc,P_pc,Cr_ppm,Zr_ppm,Zn_ppm,Co_ppm,V_ppm))
data_Complete <-data %>% drop_na(West_musgraves_RDS_Model$Variables)
data_ToProcess <- data_Complete %>% dplyr::select(West_musgraves_RDS_Model$Variables) %>% as.matrix()
pred_res <- predict(object = West_musgraves_xgb_Model, newdata = data_ToProcess)
datasource <- cbind(datasource,CloseValue_WM = pred_res)
} else {
ReqVariables =c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_WM = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model_No_V$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model_No_V$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
PredictionMatrix
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','VPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) ) {
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM, V=VPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,V,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model_No_V$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
datasource <- cbind(datasource,CloseValue_Carra_Model = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model = paste(Missing_elements,d ))
}
# if ((sum(is.na(datasource$CrPPM)))!=nrow(datasource) &(sum(is.na(datasource$ZrPPM)))!=nrow(datasource)&
#     (sum(is.na(datasource$ZnPPM)))!=nrow(datasource) &(sum(is.na(datasource$CoPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$VPPM)))!=nrow(datasource)&(sum(is.na(datasource$SPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$MgPPM)))!=nrow(datasource)&(sum(is.na(datasource$KPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$TiPPM)))!=nrow(datasource)&(sum(is.na(datasource$FePPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$PPPM)))!=nrow(datasource)) {
#   data<-datasource
#   data
#   data <-data %>% rename(Al_pct_BESTEL=AlPPM,Ca_pct_BESTEL=CaPPM,K_pct_BESTEL=KPPM,Na_pct_BESTEL=NaPPM,
#                          Sb_ppm_BESTEL=SbPPM,Ti_pct_BESTEL=TiPPM,Ag_ppm_BEST_D=AgPPM,As_ppm_BEST_D= AsPPM,
#                          Co_ppm_BEST_D=CoPPM, Fe_ppm_BEST_D=FePPM, Mn_ppm_BEST_D=MnPPM,Mo_ppm_BEST_D=MoPPM,
#                          Ni_ppm_BEST_D=NiPPM, Pb_ppm_BEST_D=PbPPM, S_pct_BEST_D=SPPM,U_ppm_BEST_D=UPPM,
#                          Zn_pct_BEST_D=ZnPPM)
#   data$Al_pct_BESTEL=data$Al_pct_BESTEL/10000
#   data$Ca_pct_BESTEL=data$Ca_pct_BESTEL/10000
#   data$K_pct_BESTEL=data$K_pct_BESTEL/10000
#   data$Na_pct_BESTEL=data$Na_pct_BESTEL/10000
#   data$Ti_pct_BESTEL=data$Ti_pct_BESTEL/10000
#   data$S_pct_BEST_D=data$S_pct_BEST_D/10000
#   data$Zn_pct_BEST_D=data$Zn_pct_BEST_D/10000
#   data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Al_pct_BESTEL,
#                                 Ca_pct_BESTEL, K_pct_BESTEL, Na_pct_BESTEL, Sb_ppm_BESTEL,
#                                 Ti_pct_BESTEL, Ag_ppm_BEST_D, As_ppm_BEST_D, Co_ppm_BEST_D,
#                                 Fe_ppm_BEST_D, Mn_ppm_BEST_D, Mo_ppm_BEST_D, Ni_ppm_BEST_D,
#                                 Pb_ppm_BEST_D, S_pct_BEST_D, U_ppm_BEST_D, Zn_pct_BEST_D))
#
#
#   data
#   data_Complete <-data %>% drop_na(Starra_RDS_Model$Variables)
#   data_Complete
#   data_ToProcess <- data %>% dplyr::select(Starra_RDS_Model$Variables) %>% as.matrix()
#   data_ToProcess
#   pred_res <- predict(object = Starra_Model_xgb_Model, newdata = data_ToProcess)
#   datasource <- cbind(datasource,CloseValue_Starra = pred_res)
#
# } else {
#   datasource <- cbind(datasource,CloseValue_Starra = 'cannot apply Starra')
#
# }
}
datasource
runApp()
require(tidyverse)
require(caret)
require(shinyalert)
require(shinyWidgets)
require(shinyjs)
require(ranger)
require(tools)
library(shiny)
library(magrittr)
library(xgboost)
library(raster)
library(nabor)
library(shinycssloaders)
library(DT)
library(plotly)
library(ggforce)
options(shiny.maxRequestSize=10000*1024^2)
West_musgraves_xgb_Model <- xgb.load(modelfile = 'Models/West_Musgraves_Near_Miss_Model.xgb')
West_musgraves_RDS_Model<-readRDS("Models/West_Musgraves_Near_Miss.RDS")
Carra_Model<-readRDS("Models/Carra_Near_Miss.RDS")
Carra_Model_No_V<-readRDS("Models/Carra_Near_Miss_No_Vanadium.RDS")
Starra_Model_xgb_Model<-xgb.load(modelfile='Models/Starra_Near_Miss_Model.xgb')
Starra_RDS_Model<-readRDS('Models/Starra_Near_Miss.RDS')
Model<-function(datasource)
{
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
if (all(c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
#change column names
data <-data %>% rename(Cr_ppm=CrPPM,Zr_ppm=ZrPPM,Zn_ppm=ZnPPM,Co_ppm=CoPPM,V_ppm=VPPM,S_pc=SPPM,Mg_pc=MgPPM ,K_pc= KPPM,Ti_pc=TiPPM, Fe_pc=FePPM, P_pc=PPPM)
# #change PPM to PC
data$S_pc=data$S_pc/10000
data$Mg_pc=data$Mg_pc/10000
data$K_pc=data$K_pc/10000
data$Ti_pc=data$Ti_pc/10000
data$Fe_pc=data$Fe_pc/10000
data$P_pc=data$P_pc/10000
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,S_pc,Mg_pc,K_pc,Ti_pc,Fe_pc,P_pc,Cr_ppm,Zr_ppm,Zn_ppm,Co_ppm,V_ppm))
data_Complete <-data %>% drop_na(West_musgraves_RDS_Model$Variables)
data_ToProcess <- data_Complete %>% dplyr::select(West_musgraves_RDS_Model$Variables) %>% as.matrix()
pred_res <- predict(object = West_musgraves_xgb_Model, newdata = data_ToProcess)
datasource <- cbind(datasource,CloseValue_WM = pred_res)
} else {
ReqVariables =c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_WM = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model_No_V$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model_No_V$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
PredictionMatrix
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','VPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) ) {
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM, V=VPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,V,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model_No_V$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
datasource <- cbind(datasource,CloseValue_Carra_Model = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','VPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model = paste(Missing_elements,d ))
}
# if ((sum(is.na(datasource$CrPPM)))!=nrow(datasource) &(sum(is.na(datasource$ZrPPM)))!=nrow(datasource)&
#     (sum(is.na(datasource$ZnPPM)))!=nrow(datasource) &(sum(is.na(datasource$CoPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$VPPM)))!=nrow(datasource)&(sum(is.na(datasource$SPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$MgPPM)))!=nrow(datasource)&(sum(is.na(datasource$KPPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$TiPPM)))!=nrow(datasource)&(sum(is.na(datasource$FePPM)))!=nrow(datasource) &
#     (sum(is.na(datasource$PPPM)))!=nrow(datasource)) {
#   data<-datasource
#   data
#   data <-data %>% rename(Al_pct_BESTEL=AlPPM,Ca_pct_BESTEL=CaPPM,K_pct_BESTEL=KPPM,Na_pct_BESTEL=NaPPM,
#                          Sb_ppm_BESTEL=SbPPM,Ti_pct_BESTEL=TiPPM,Ag_ppm_BEST_D=AgPPM,As_ppm_BEST_D= AsPPM,
#                          Co_ppm_BEST_D=CoPPM, Fe_ppm_BEST_D=FePPM, Mn_ppm_BEST_D=MnPPM,Mo_ppm_BEST_D=MoPPM,
#                          Ni_ppm_BEST_D=NiPPM, Pb_ppm_BEST_D=PbPPM, S_pct_BEST_D=SPPM,U_ppm_BEST_D=UPPM,
#                          Zn_pct_BEST_D=ZnPPM)
#   data$Al_pct_BESTEL=data$Al_pct_BESTEL/10000
#   data$Ca_pct_BESTEL=data$Ca_pct_BESTEL/10000
#   data$K_pct_BESTEL=data$K_pct_BESTEL/10000
#   data$Na_pct_BESTEL=data$Na_pct_BESTEL/10000
#   data$Ti_pct_BESTEL=data$Ti_pct_BESTEL/10000
#   data$S_pct_BEST_D=data$S_pct_BEST_D/10000
#   data$Zn_pct_BEST_D=data$Zn_pct_BEST_D/10000
#   data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Al_pct_BESTEL,
#                                 Ca_pct_BESTEL, K_pct_BESTEL, Na_pct_BESTEL, Sb_ppm_BESTEL,
#                                 Ti_pct_BESTEL, Ag_ppm_BEST_D, As_ppm_BEST_D, Co_ppm_BEST_D,
#                                 Fe_ppm_BEST_D, Mn_ppm_BEST_D, Mo_ppm_BEST_D, Ni_ppm_BEST_D,
#                                 Pb_ppm_BEST_D, S_pct_BEST_D, U_ppm_BEST_D, Zn_pct_BEST_D))
#
#
#   data
#   data_Complete <-data %>% drop_na(Starra_RDS_Model$Variables)
#   data_Complete
#   data_ToProcess <- data %>% dplyr::select(Starra_RDS_Model$Variables) %>% as.matrix()
#   data_ToProcess
#   pred_res <- predict(object = Starra_Model_xgb_Model, newdata = data_ToProcess)
#   datasource <- cbind(datasource,CloseValue_Starra = pred_res)
#
# } else {
#   datasource <- cbind(datasource,CloseValue_Starra = 'cannot apply Starra')
#
# }
}
datasource
runApp()
require(tidyverse)
require(caret)
require(shinyalert)
require(shinyWidgets)
require(shinyjs)
require(ranger)
require(tools)
library(shiny)
library(magrittr)
library(xgboost)
library(raster)
library(nabor)
library(shinycssloaders)
library(DT)
library(plotly)
library(ggforce)
options(shiny.maxRequestSize=10000*1024^2)
West_musgraves_xgb_Model <- xgb.load(modelfile = 'Models/West_Musgraves_Near_Miss_Model.xgb')
West_musgraves_RDS_Model<-readRDS("Models/West_Musgraves_Near_Miss.RDS")
Carra_Model<-readRDS("Models/Carra_Near_Miss.RDS")
Carra_Model_No_V<-readRDS("Models/Carra_Near_Miss_No_Vanadium.RDS")
Starra_Model_xgb_Model<-xgb.load(modelfile='Models/Starra_Near_Miss_Model.xgb')
Starra_RDS_Model<-readRDS('Models/Starra_Near_Miss.RDS')
Model<-function(datasource)
{
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
datasource[,7:ncol(datasource)]<-sapply(datasource[,7:ncol(datasource)],as.numeric)
if (all(c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
#change column names
data <-data %>% rename(Cr_ppm=CrPPM,Zr_ppm=ZrPPM,Zn_ppm=ZnPPM,Co_ppm=CoPPM,V_ppm=VPPM,S_pc=SPPM,Mg_pc=MgPPM ,K_pc= KPPM,Ti_pc=TiPPM, Fe_pc=FePPM, P_pc=PPPM)
# #change PPM to PC
data$S_pc=data$S_pc/10000
data$Mg_pc=data$Mg_pc/10000
data$K_pc=data$K_pc/10000
data$Ti_pc=data$Ti_pc/10000
data$Fe_pc=data$Fe_pc/10000
data$P_pc=data$P_pc/10000
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,S_pc,Mg_pc,K_pc,Ti_pc,Fe_pc,P_pc,Cr_ppm,Zr_ppm,Zn_ppm,Co_ppm,V_ppm))
data_Complete <-data %>% drop_na(West_musgraves_RDS_Model$Variables)
data_ToProcess <- data_Complete %>% dplyr::select(West_musgraves_RDS_Model$Variables) %>% as.matrix()
pred_res <- predict(object = West_musgraves_xgb_Model, newdata = data_ToProcess)
datasource <- cbind(datasource,CloseValue_WM = pred_res)
} else {
ReqVariables =c('CrPPM','ZrPPM','ZnPPM','CoPPM','VPPM','SPPM','MgPPM' ,'KPPM','TiPPM', 'FePPM', 'PPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_WM = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) )
{
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model_No_V$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model_No_V$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
PredictionMatrix
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model_No_V = paste(Missing_elements,d ))
}
if (all(c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','VPPM','ZnPPM','ZrPPM') %in% names(datasource)==TRUE) ) {
data<-datasource
data <-data %>% rename(Ag=AgPPM,As=AsPPM,Cu=CuPPM,La=LaPPM,
Mo=MoPPM,Ni=NiPPM,Pb=PbPPM ,Sr= SrPPM,Th=ThPPM, U=UPPM, V=VPPM,Zn=ZnPPM,Zr=ZrPPM)
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Ag,As,Cu,La,Mo,Ni,Pb,Sr,Th,U,V,Zn,Zr))
#data_Complete<-data%>%drop_na(Carra_Model_No_V$Variables)
data_Complete<-data
data_ToProcess <- data_Complete %>% dplyr::select(Carra_Model$Variables) %>% as.matrix()
data_ToProcess
Models <- Carra_Model$Models
PredictionMatrix <- numeric(length = nrow(data_ToProcess))
for(i in 1:length(Models)){
PredictionMatrix <- PredictionMatrix + predict(Models[[i]], data = data_ToProcess)$predictions[,1]
}
PredictionMatrix <- PredictionMatrix/length(Models)
datasource <- cbind(datasource,CloseValue_Carra_Model = PredictionMatrix)
} else {
ReqVariables =c('AgPPM','AsPPM','CuPPM','LaPPM',
'MoPPM','NiPPM','PbPPM' ,'SrPPM','ThPPM','UPPM','VPPM','ZnPPM','ZrPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model = paste(Missing_elements,d ))
}
if (all(c('AlPPM','CaPPM','KPPM','NaPPM',
'SbPPM','TiPPM','AgPPM','AsPPM',
'CoPPM', 'FePPM', 'MnPPM','MoPPM',
'NiPPM', 'PbPPM', 'SPPM','UPPM','ZnPPM') %in% names(datasource)==TRUE) ) {
data<-datasource
data
data <-data %>% rename(Al_pct_BESTEL=AlPPM,Ca_pct_BESTEL=CaPPM,K_pct_BESTEL=KPPM,Na_pct_BESTEL=NaPPM,
Sb_ppm_BESTEL=SbPPM,Ti_pct_BESTEL=TiPPM,Ag_ppm_BEST_D=AgPPM,As_ppm_BEST_D= AsPPM,
Co_ppm_BEST_D=CoPPM, Fe_ppm_BEST_D=FePPM, Mn_ppm_BEST_D=MnPPM,Mo_ppm_BEST_D=MoPPM,
Ni_ppm_BEST_D=NiPPM, Pb_ppm_BEST_D=PbPPM, S_pct_BEST_D=SPPM,U_ppm_BEST_D=UPPM,
Zn_pct_BEST_D=ZnPPM)
data$Al_pct_BESTEL=data$Al_pct_BESTEL/10000
data$Ca_pct_BESTEL=data$Ca_pct_BESTEL/10000
data$K_pct_BESTEL=data$K_pct_BESTEL/10000
data$Na_pct_BESTEL=data$Na_pct_BESTEL/10000
data$Ti_pct_BESTEL=data$Ti_pct_BESTEL/10000
data$S_pct_BEST_D=data$S_pct_BEST_D/10000
data$Zn_pct_BEST_D=data$Zn_pct_BEST_D/10000
data<-subset(data, select = c(PROJECT,SiteID,SampleID,DEPTH_FROM,DEPTH_TO,Al_pct_BESTEL,
Ca_pct_BESTEL, K_pct_BESTEL, Na_pct_BESTEL, Sb_ppm_BESTEL,
Ti_pct_BESTEL, Ag_ppm_BEST_D, As_ppm_BEST_D, Co_ppm_BEST_D,
Fe_ppm_BEST_D, Mn_ppm_BEST_D, Mo_ppm_BEST_D, Ni_ppm_BEST_D,
Pb_ppm_BEST_D, S_pct_BEST_D, U_ppm_BEST_D, Zn_pct_BEST_D))
data
data_Complete <-data %>% drop_na(Starra_RDS_Model$Variables)
data_Complete
data_ToProcess <- data %>% dplyr::select(Starra_RDS_Model$Variables) %>% as.matrix()
data_ToProcess
pred_res <- predict(object = Starra_Model_xgb_Model, newdata = data_ToProcess)
datasource <- cbind(datasource,CloseValue_Starra = pred_res)
} else {
ReqVariables =c('AlPPM','CaPPM','KPPM','NaPPM',
'SbPPM','TiPPM','AgPPM','AsPPM',
'CoPPM', 'FePPM', 'MnPPM','MoPPM',
'NiPPM', 'PbPPM', 'SPPM','UPPM','ZnPPM')
ReqVariables
datasource <- datasource[,colSums(is.na(datasource))<nrow(datasource)]
datasource
AvailableVariables=c(colnames(datasource))
AvailableVariables
d=(setdiff(ReqVariables,AvailableVariables))
Missing_elements="Missing element/s"
datasource <- cbind(datasource,CloseValue_Carra_Model = paste(Missing_elements,d ))
}
}
datasource
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
